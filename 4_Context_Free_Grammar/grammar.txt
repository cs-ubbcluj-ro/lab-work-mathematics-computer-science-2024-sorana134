FA -> DECLARATION_LIST

DECLARATION_LIST -> DECLARATION DECLARATION_LIST | ε

DECLARATION -> TYPE IDENTIFIER OPTIONAL_INITIALIZER ";"

TYPE -> int | float | char

OPTIONAL_INITIALIZER -> "=" EXPRESSION | ε

IDENTIFIER -> LETTER IDENTIFIER_TAIL
IDENTIFIER_TAIL -> LETTER_OR_DIGIT IDENTIFIER_TAIL | ε

LETTER -> a | b | ... | z | A | B | ... | Z
LETTER_OR_DIGIT -> LETTER | DIGIT
DIGIT -> 0 | 1 | ... | 9

EXPRESSION -> TERM EXPRESSION_TAIL
EXPRESSION_TAIL -> "+" TERM EXPRESSION_TAIL | "-" TERM EXPRESSION_TAIL | ε
TERM -> FACTOR TERM_TAIL
TERM_TAIL -> "*" FACTOR TERM_TAIL | "/" FACTOR TERM_TAIL | ε
FACTOR -> IDENTIFIER | NUMBER | "(" EXPRESSION ")"
NUMBER -> DIGIT NUMBER_TAIL
NUMBER_TAIL -> DIGIT NUMBER_TAIL | ε
IOS -> "scanf" "(" FORMAT_STRING "," IDENTIFIER_LIST ")"
FORMAT_STRING -> STRING
IDENTIFIER_LIST -> IDENTIFIER IDENTIFIER_LIST_TAIL
IDENTIFIER_LIST_TAIL -> "," IDENTIFIER IDENTIFIER_LIST_TAIL | ε
IOS -> "printf" "(" FORMAT_STRING "," IDENTIFIER_LIST ")"
FORMAT_STRING -> STRING
IDENTIFIER_LIST -> IDENTIFIER IDENTIFIER_LIST_TAIL
IDENTIFIER_LIST_TAIL -> "," IDENTIFIER IDENTIFIER_LIST_TAIL | ε
STATEMENT -> EXPRESSION ";" | COMPOUND_STATEMENT | IF_STATEMENT | WHILE_STATEMENT | IOS ";"
COMPOUND_STATEMENT -> "{" STATEMENT_LIST "}"
STATEMENT_LIST -> STATEMENT STATEMENT_LIST | ε
IF_STATEMENT -> "if" "(" EXPRESSION ")" STATEMENT OPTIONAL_ELSE
OPTIONAL_ELSE -> "else" STATEMENT | ε
WHILE_STATEMENT -> "while" "(" EXPRESSION ")" STATEMENT
Terminals: 
int, float, char, =, +, -, *, /, ;, {, }, (, ), if, else, while
a, b, ..., z, A, B, ..., Z, 0, 1, ..., 9
Non terminals:
FA, DECLARATION_LIST, DECLARATION, TYPE, OPTIONAL_INITIALIZER, IDENTIFIER,
IDENTIFIER_TAIL, LETTER, LETTER_OR_DIGIT, DIGIT, EXPRESSION, EXPRESSION_TAIL,
TERM, TERM_TAIL, FACTOR, NUMBER, NUMBER_TAIL, STATEMENT, COMPOUND_STATEMENT,
STATEMENT_LIST, IF_STATEMENT, OPTIONAL_ELSE, WHILE_STATEMENT


